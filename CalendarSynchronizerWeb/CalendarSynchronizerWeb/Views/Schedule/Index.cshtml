@using Core.Models

@model CalendarPaginatedList<Schedule>

<br />
<div class="row">
    <div>
        <div class="col-6">
            <h2 class="text-primary"> Your Events </h2>
        </div>
        <div class="col-6">
            <h2 class="text-primary">Calendar Summary @if(Model.Any()){ @Model.ToList()[0].Calendar.Summary }</h2>
        </div>
    </div>
    <div class="col-6 text-right">
        <a asp-action="Create" asp-controller="Schedule" asp-route-calendarId="" class="btn btn-primary">Create New Event</a>
    </div>
</div>
<form asp-controller="Schedule" asp-action="Index" method="get">
    <p>
        Subject: <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" />
        <input class="btn btn-secondary" type="submit" value="Search" /> |
        <a asp-action="Index">Back to Full List</a>
    </p>
</form>
<div class="p-4 border rounded">
    @if (Model.Count() > 0)
    {
        <table class="table table-striped border">
            <tr class="table-secondary">
                <th>
                    Schedule Id
                </th>
                <th>
                    Subject
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["StartTimeSortParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Start Time</a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["EndTimeSortParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">End Time</a>
                    End Time
                </th>
                <th>Actions</th>
            </tr>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @item.CalendarId
                    </td>
                    <td>
                        @item.Subject
                    </td>
                    <td>
                        @item.StartTime
                    </td>
                    <td>
                        @item.EndTime
                    </td>
                    <td>
                        <div class="text-center">
                            <form asp-action="Delete" asp-route-scheduleId="@item.Id">
                                <a asp-action="Edit" asp-route-scheduleId="@item.Id" class="btn btn-info text-white">
                                    Edit
                                </a>
                                <a asp-action="Details" asp-route-scheduleId="@item.Id" class="btn btn-secondary text-white">Details</a>
                                <button type="submit" onclick="return confirm('Are you sure you want to delete this?')"
                                class="btn btn-danger">
                                    Delete
                                </button>
                            </form>
                        </div>
                    </td>
                </tr>
            }
        </table>
    }
    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @prevDisabled">
        Previous
    </a>
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @nextDisabled">
        Next
    </a>
</div>
